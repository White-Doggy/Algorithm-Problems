[ SELECT ]

모든 대상
SELECT * 
FROM ANIMAL_INS 
ORDER BY ANIMAL_ID

역순 정렬
SELECT NAME, DATETIME 
FROM ANIMAL_INS 
ORDER BY ANIMAL_ID DESC

조건부 
SELECT ANIMAL_ID, NAME 
FROM ANIMAL_INS 
WHERE INTAKE_CONDITION = 'Sick'

NOT 조건부
SELECT ANIMAL_ID, NAME 
FROM ANIMAL_INS 
WHERE NOT INTAKE_CONDITION = 'Aged' 
ORDER BY ANIMAL_ID


[ SUM, MAX, MIN ]

[ MIN ]
SELECT MIN(DATETIME) AS 시간 
FROM ANIMAL_INS

[ MAX ]
SELECT MAX(DATETIME) AS 시간
FROM ANIMAL_INS

[ SUM ] == 해당 값들의 합

[ COUNT ] == row 의 수 계산

++ 중복 제거 count == 변수 앞에 DISTINCT 추가
SELECT COUNT( DISTINCT NAME) AS count
FROM ANIMAL_INS


[ GROUP BY ]

SELECT ANIMAL_TYPE, COUNT(ANIMAL_TYPE) AS count 
FROM ANIMAL_INS 
GROUP BY ANIMAL_TYPE


동명 대상 찾기 == HAVING 절로 그룹에 대한 조건 지정
SELECT NAME, COUNT(NAME) AS 'COUNT' 
FROM ANIMAL_INS 
GROUP BY NAME 
HAVING COUNT(NAME)>1;


++ DATETIME 자료형에 대하여 HOUR을 통해 시간만 끌어쓸 수 있음
SELECT HOUR(DATETIME) HOUR, COUNT(DATETIME) COUNT 
FROM ANIMAL_OUTS
GROUP BY HOUR(DATETIME)
HAVING HOUR >=9 and HOUR <=19
ORDER BY HOUR


[ IS NULL ]
SELECT ANIMAL_ID 
FROM ANIMAL_INS 
WHERE NAME IS NULL 
ORDER BY ANIMAL_ID

반대 == 걍 NOT
SELECT ANIMAL_ID FROM ANIMAL_INS WHERE NOT NAME IS NULL ORDER BY ANIMAL_ID

[ NULL 처리 ] == IFNULL을 활용해 처리
SELECT ANIMAL_TYPE, IFNULL(NAME, "No name") AS NAME, SEX_UPON_INTAKE
FROM ANIMAL_INS 
ORDER BY ANIMAL_ID



[ JOIN ]
SELECT ANIMAL_ID, NAME FROM ANIMAL_OUTS 
WHERE ANIMAL_ID NOT IN (SELECT ANIMAL_INS.ANIMAL_ID FROM ANIMAL_INS) 
ORDER BY ANIMAL_ID;

// 2개 이상 참조시, 해당 테이블 명을 앞에 붙여줘야 한다.
SELECT  ANIMAL_INS.ANIMAL_ID, ANIMAL_INS.NAME 
FROM ANIMAL_INS, ANIMAL_OUTS 
WHERE ANIMAL_INS.ANIMAL_ID = ANIMAL_OUTS.ANIMAL_ID AND ANIMAL_INS.DATETIME > ANIMAL_OUTS.DATETIME
ORDER BY ANIMAL_INS.DATETIME

// LIMITS로 3개만 출력
SELECT NAME, DATETIME 
FROM ANIMAL_INS 
WHERE ANIMAL_ID NOT IN ( SELECT ANIMAL_OUTS.ANIMAL_ID FROM ANIMAL_OUTS ) 
ORDER BY DATETIME
LIMIT 3;



[ String, Date ]

SELECT ANIMAL_ID, NAME, SEX_UPON_INTAKE FROM ANIMAL_INS 
WHERE NAME = 'Lucy' OR NAME = 'Ella' OR NAME = 'Pickle' OR NAME = 'Rogan' OR NAME = 'Sabrina' OR NAME = 'Mitty'
ORDER BY ANIMAL_ID

// % == 어떠한 문자열도 가능
SELECT ANIMAL_ID, NAME FROM ANIMAL_INS 
WHERE NAME LIKE '%el%' AND ANIMAL_TYPE = 'Dog'
ORDER BY NAME

// case, then, else 를 통해 조건부로 출력이 가능;
SELECT ANIMAL_ID, NAME, CASE WHEN SEX_UPON_INTAKE LIKE "%Neutered%" OR SEX_UPON_INTAKE LIKE "%Spayed%" THEN "O" ELSE 'X' END AS "중성화" 
FROM ANIMAL_INS
ORDER BY ANIMAL_ID

// ORDER BY 에 대해 DATE 연산을 반영하는 것도 가능함
SELECT ANIMAL_OUTS.ANIMAL_ID, ANIMAL_OUTS.NAME
FROM ANIMAL_OUTS, ANIMAL_INS
WHERE ANIMAL_OUTS.ANIMAL_ID=ANIMAL_INS.ANIMAL_ID
ORDER BY ANIMAL_INS.DATETIME - ANIMAL_OUTS.DATETIME
LIMIT 2


// DATE 형변환
SELECT ANIMAL_ID, NAME, DATE_FORMAT(DATETIE, '%Y-%M-%D') AS 날짜
FROM ANIMAL_INS
ORDER BY ANIMAL_ID